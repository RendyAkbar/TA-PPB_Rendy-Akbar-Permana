{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./Destination.css';// File CSS yang disertakan di sini\nimport{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const OpenTripMapPlaces=()=>{const[placeData,setPlaceData]=useState([]);const[isDetailVisible,setIsDetailVisible]=useState({});useEffect(()=>{const countries=['Pakistan','Indonesia','United States','India'];const fetchData=async()=>{const requests=countries.map(country=>{return axios.request({method:'GET',url:'https://opentripmap-places-v1.p.rapidapi.com/en/places/geoname',params:{name:country},headers:{'X-RapidAPI-Key':'c1c3f89f25msh8511d6b603288aap1277f4jsna11c95d88eef','X-RapidAPI-Host':'opentripmap-places-v1.p.rapidapi.com'}});});try{const responses=await Promise.all(requests);const data=responses.map((response,index)=>{return{country:countries[index],...response.data};});setPlaceData(data);}catch(error){console.error(error);}};fetchData();},[]);// Empty dependency array karena inisialisasi hanya perlu dilakukan sekali\nconst handleCardClick=country=>{setIsDetailVisible(prevVisibility=>({...prevVisibility,[country]:!prevVisibility[country]}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"place-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Informasi Lokasi\"}),placeData.length>0?placeData.map(data=>/*#__PURE__*/_jsxs(\"div\",{className:\"place-card\",onClick:()=>handleCardClick(data.country),children:[/*#__PURE__*/_jsx(\"h2\",{children:data.name}),isDetailVisible[data.country]&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Negara: \",data.country]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Latitude: \",data.lat]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Longitude: \",data.lon]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Populasi: \",data.population]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Zona Waktu: \",data.timezone]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",data.status]}),/*#__PURE__*/_jsx(Link,{to:\"/Destination/\".concat(data.country.toLowerCase()),children:/*#__PURE__*/_jsx(\"button\",{children:\"Lihat Destinasi\"})})]})]},data.name)):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});};export default OpenTripMapPlaces;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OpenTripMapPlaces","placeData","setPlaceData","isDetailVisible","setIsDetailVisible","countries","fetchData","requests","map","country","request","method","url","params","name","headers","responses","Promise","all","data","response","index","error","console","handleCardClick","prevVisibility","className","children","length","onClick","lat","lon","population","timezone","status","to","concat","toLowerCase"],"sources":["D:/TA-Prak-PPB-main/TA-Prak-PPB-main/src/Pages/Destination.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Destination.css'; // File CSS yang disertakan di sini\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst OpenTripMapPlaces = () => {\r\n  const [placeData, setPlaceData] = useState([]);\r\n  const [isDetailVisible, setIsDetailVisible] = useState({});\r\n  \r\n  useEffect(() => {\r\n    const countries = ['Pakistan', 'Indonesia', 'United States', 'India'];\r\n\r\n    const fetchData = async () => {\r\n      const requests = countries.map((country) => {\r\n        return axios.request({\r\n          method: 'GET',\r\n          url: 'https://opentripmap-places-v1.p.rapidapi.com/en/places/geoname',\r\n          params: { name: country },\r\n          headers: {\r\n            'X-RapidAPI-Key': 'c1c3f89f25msh8511d6b603288aap1277f4jsna11c95d88eef',\r\n            'X-RapidAPI-Host': 'opentripmap-places-v1.p.rapidapi.com',\r\n          },\r\n        });\r\n      });\r\n\r\n      try {\r\n        const responses = await Promise.all(requests);\r\n        const data = responses.map((response, index) => {\r\n          return { country: countries[index], ...response.data };\r\n        });\r\n        setPlaceData(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Empty dependency array karena inisialisasi hanya perlu dilakukan sekali\r\n\r\n  const handleCardClick = (country) => {\r\n    setIsDetailVisible((prevVisibility) => ({\r\n      ...prevVisibility,\r\n      [country]: !prevVisibility[country],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"place-container\">\r\n      <h1>Informasi Lokasi</h1>\r\n      {placeData.length > 0 ? (\r\n        placeData.map((data) => (\r\n          <div className=\"place-card\" key={data.name} onClick={() => handleCardClick(data.country)}>\r\n            <h2>{data.name}</h2>\r\n            {isDetailVisible[data.country] && (\r\n              <>\r\n                <p>Negara: {data.country}</p>\r\n                <p>Latitude: {data.lat}</p>\r\n                <p>Longitude: {data.lon}</p>\r\n                <p>Populasi: {data.population}</p>\r\n                <p>Zona Waktu: {data.timezone}</p>\r\n                <p>Status: {data.status}</p>\r\n                <Link to={`/Destination/${data.country.toLowerCase()}`}>\r\n                  <button>Lihat Destinasi</button>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenTripMapPlaces;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}